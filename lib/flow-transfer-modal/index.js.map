{"version":3,"sources":["../../src/components/flow-transfer-modal/index.jsx"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","FlowTransferModal","props","visible","remark","setRemark","request","onOk","onCancel","onModelFormChange","runTimeTasks","useForm","form","targetUserList","setTargetUserList","loading","setLoading","setFieldsValue","reason","length","taskIds","taskId","_onOk","validateFields","values","method","url","api","taskTransfer","data","res","console","log","resetFields","success","_onSearch","val","userList","_onChange","changedValues","allValues","remember","required","message","map","d","i","id","name","login","nodeName","userNames"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\n\r\nimport { Button, Input, Modal, Select, Form, message, Spin } from \"antd\";\r\nimport _debounce from \"lodash.debounce\";\r\nimport api from \"../api\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 18 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nexport default function FlowTransferModal(props) {\r\n  const {\r\n    visible,\r\n    remark,\r\n    setRemark,\r\n    request,\r\n    onOk,\r\n    onCancel,\r\n    onModelFormChange,\r\n    runTimeTasks = [],\r\n  } = props;\r\n\r\n  const [form] = Form.useForm();\r\n  const [targetUserList, setTargetUserList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n    }\r\n    return () => {};\r\n  }, [visible]);\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({ reason: remark });\r\n    return () => {};\r\n  }, [remark]);\r\n\r\n  useEffect(() => {\r\n    if (runTimeTasks.length) {\r\n      // console.log(remark)\r\n      form.setFieldsValue({ taskIds: [runTimeTasks[0]?.taskId] });\r\n    }\r\n    return () => {};\r\n  }, [runTimeTasks]);\r\n\r\n  const _onOk = async () => {\r\n    if (request) {\r\n      try {\r\n        setLoading(true);\r\n        const values = await form.validateFields();\r\n        const res = await request({\r\n          method: \"POST\",\r\n          url: api.taskTransfer(),\r\n          data: { ...values },\r\n        });\r\n        console.log(\"values:\", values);\r\n        form.resetFields();\r\n        message.success(res.data.data);\r\n        if (typeof onOk === \"function\") onOk(values);\r\n        // console.log(\"Success:\", values);\r\n      } catch (errorInfo) {\r\n        console.log(\"Failed:\", errorInfo);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const _onSearch = _debounce(async (val) => {\r\n    try {\r\n      if (request) {\r\n        let res = await request({ method: \"GET\", url: api.userList(val) });\r\n        let data = res?.data?.data;\r\n        // console.log(data);\r\n        setTargetUserList(data);\r\n      }\r\n    } catch (errorInfo) {\r\n      console.log(\"Failed:\", errorInfo);\r\n    }\r\n  }, 300);\r\n\r\n  const _onChange = (changedValues, allValues) => {\r\n    // setRemark && setRemark(changedValues.reason);\r\n    onModelFormChange && onModelFormChange(changedValues);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"流程转办\"\r\n      visible={visible}\r\n      onOk={_onOk}\r\n      onCancel={onCancel}\r\n      cancelText=\"取消\"\r\n      okText=\"确定\"\r\n      confirmLoading={loading}\r\n    >\r\n      {/* <Spin spinning={true}> */}\r\n        <Form\r\n          {...layout}\r\n          form={form}\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onValuesChange={_onChange}\r\n          // onFinish={onFinish}\r\n          // onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"转办人\"\r\n            name=\"targetUserId\"\r\n            rules={[{ required: true, message: \"请选择转办人\" }]}\r\n          >\r\n            <Select\r\n              showSearch\r\n              placeholder=\"选择转办人\"\r\n              optionFilterProp=\"children\"\r\n              // onChange={onChange}\r\n              onSearch={_onSearch}\r\n            >\r\n              {targetUserList.map((d, i) => (\r\n                <Select.Option key={i} value={d.id}>\r\n                  {`${d.name} - ${d.login}`}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"流程节点\"\r\n            name=\"taskIds\"\r\n            rules={[{ required: true, message: \"请选择流程节点\" }]}\r\n          >\r\n            <Select\r\n              mode=\"multiple\"\r\n              placeholder=\"选择流程节点\"\r\n              // onChange={onChange}\r\n            >\r\n              {runTimeTasks.map((d, i) => (\r\n                <Select.Option key={i} value={d.taskId}>\r\n                  {`${d.nodeName} - ${d.userNames}`}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"转办理由\"\r\n            name=\"reason\"\r\n            rules={[{ required: true, message: \"请输入转办理由\" }]}\r\n          >\r\n            <Input.TextArea\r\n              rows={4}\r\n              placeholder=\"请输入转办理由\"\r\n            ></Input.TextArea>\r\n          </Form.Item>\r\n        </Form>\r\n      {/* </Spin> */}\r\n    </Modal>\r\n  );\r\n}\r\n"],"file":"index.js"}