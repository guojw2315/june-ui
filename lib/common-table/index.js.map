{"version":3,"sources":["../../src/components/common-table/index.jsx"],"names":["CommonTable","props","api","request","afterFetchData","queryParams","rest","loading","setLoading","currentPage","setCurrentPage","pageSize","setPageSize","dataSource","setDataSource","total","setTotal","_fetchData","params","page","size","_debRequest","url","other","_url","_other","method","data","res","records","console","log","_onPageChange","tableProps","pagination","current","onChange","onShowSizeChange","render"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport { Table } from \"antd\";\nimport _debounce from \"lodash.debounce\";\nexport default function CommonTable(props) {\n  const { api, request, afterFetchData, queryParams = {}, ...rest } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [dataSource, setDataSource] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  // useEffect(() => {\n  //   _fetchData();\n  //   return () => {};\n  // }, []);\n  \n  useEffect(() => {\n    if (currentPage > 1) {\n      setCurrentPage(1);\n    }\n  }, [queryParams]);\n\n  useEffect(() => {\n    _fetchData(queryParams, currentPage, pageSize);\n    return () => {};\n  }, [queryParams, currentPage, pageSize]);\n\n  const _fetchData = async (\n    params = queryParams,\n    page = currentPage,\n    size = pageSize\n  ) => {\n    if (request) {\n      setLoading(true);\n      await _debRequest(params, page, size);\n    }\n  };\n\n  const _debRequest = _debounce(async (params, page, size) => {\n    try {\n      let _url;\n      let _other;\n      // console.log('api:', api)\n      if (typeof api === \"function\") {\n        let { url, ...other } = api({ page, size });\n        _url = url;\n        _other = other;\n      } else {\n        _url = api;\n      }\n      // return console.log(_url)\n      let res = await request({\n        method: \"POST\",\n        url: _url,\n        data: { ...queryParams, ..._other },\n      });\n\n      const { records = [], total = 0 } = res?.data?.data || {};\n      setDataSource(records);\n      setTotal(total);\n      setLoading(false);\n      afterFetchData && afterFetchData(res?.data?.data);\n    } catch (e) {\n      setLoading(false);\n      console.log(\"flow-list fetch failed;\", e);\n    }\n  }, 300);\n\n  const _onPageChange = (page, pageSize) => {\n    setCurrentPage(page);\n    setPageSize(pageSize);\n  };\n\n  // console.log(dataSource, rest.rowKey)\n\n  const tableProps = {\n    loading,\n    dataSource,\n    pagination: {\n      current: currentPage,\n      total,\n      pageSize,\n      onChange: _onPageChange,\n      onShowSizeChange: _onPageChange,\n    }\n  }\n\n  return props.render ? props.render({...tableProps}) : (\n    <Table\n      {...tableProps}\n      {...rest}\n    />\n  );\n}\n"],"file":"index.js"}