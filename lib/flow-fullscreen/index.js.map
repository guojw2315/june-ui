{"version":3,"sources":["../../src/components/flow-fullscreen/index.jsx"],"names":["FlowFullScreen","props","el","isFullScreen","setIsFullScreen","document","addEventListener","_listenScreenChange","bind","removeEventListener","console","log","fullscreenElement","_onFullScreen","current","requestFullscreen","_onExitFullScreen","exitFullscreen"],"mappings":";;;;;;;;;;;;;AAAA;;AAGA;;AAEe,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAAA,MACpCC,EADoC,GAC7BD,KAD6B,CACpCC,EADoC;;AAAA,kBAGJ,qBAAS,KAAT,CAHI;AAAA,MAGrCC,YAHqC;AAAA,MAGvBC,eAHuB;;AAK5C,wBAAU,YAAM;AACdC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8CC,mBAAmB,CAACC,IAApB,CAAyB,KAAzB,CAA9C;AACA,WAAO,YAAM;AACXH,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,kBAA7B,EAAiDF,mBAAmB,CAACC,IAApB,CAAyB,KAAzB,CAAjD;AACD,KAFD;AAGD,GALD,EAKG,EALH;;AAOA,MAAMD,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAK;AAC/BG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAP,IAAAA,eAAe,CAACC,QAAQ,CAACO,iBAAT,KAA+B,IAAhC,CAAf;AACD,GAHD;;AAKA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BX,IAAAA,EAAE,CAACY,OAAH,CAAWC,iBAAX;AACD,GAFD;;AAIA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BX,IAAAA,QAAQ,CAACY,cAAT;AACD,GAFD;;AAIA,SAAOd,YAAY,gBACjB;AAAQ,IAAA,IAAI,eAAE,gCAAC,6BAAD,OAAd;AAA0C,IAAA,OAAO,EAAEa;AAAnD,oBADiB,gBAKjB;AAAQ,IAAA,IAAI,eAAE,gCAAC,yBAAD,OAAd;AAAsC,IAAA,OAAO,EAAEH;AAA/C,oBALF;AASD","sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nimport { FullscreenOutlined, FullscreenExitOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function FlowFullScreen(props) {\r\n  const { el } = props;\r\n\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('fullscreenchange', _listenScreenChange.bind(this))\r\n    return () => {\r\n      document.removeEventListener('fullscreenchange', _listenScreenChange.bind(this))\r\n    };\r\n  }, []);\r\n\r\n  const _listenScreenChange = () =>{\r\n    console.log('change')\r\n    setIsFullScreen(document.fullscreenElement !== null);\r\n  }\r\n\r\n  const _onFullScreen = () => {\r\n    el.current.requestFullscreen();\r\n  };\r\n\r\n  const _onExitFullScreen = () => {\r\n    document.exitFullscreen();\r\n  };\r\n\r\n  return isFullScreen ? (\r\n    <Button icon={<FullscreenExitOutlined />} onClick={_onExitFullScreen}>\r\n      退出\r\n    </Button>\r\n  ) : (\r\n    <Button icon={<FullscreenOutlined />} onClick={_onFullScreen}>\r\n      全屏\r\n    </Button>\r\n  );\r\n}\r\n"],"file":"index.js"}