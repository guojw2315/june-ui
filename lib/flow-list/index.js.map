{"version":3,"sources":["../../src/components/flow-list/index.jsx"],"names":["FlowList","props","onTabChange","renderTabs","renderContent","TableComponent","TabsComponent","request","listApi","onLinkClick","data","tabProps","rest","_listApi","all","currentPage","pageSize","url","wait","accept","done","finishFlag","tabs","name","key","total","el","useForm","form","current","active","setAcitve","options","setOptions","searchParams","setSearchParams","rowKey","setRowKey","setUpdate","_fetchOptions","_onTabChange","method","api","dictProcessList","res","console","log","_afterFetchData","records","tab","find","d","test","Date","getTime","_onSearch","values","_renderTabs","Tabs","FlowTabs","map","value","_renderSearch","renderSearch","_renderContent","column2","title","dataIndex","width","column3","columns","col","fixed","align","render","args","bind","page","size"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AAKA;;;;;;AAEe,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;AAAA;;AAAA,MAEpCC,WAFoC,GAalCD,KAbkC,CAEpCC,WAFoC;AAAA,MAGpCC,UAHoC,GAalCF,KAbkC,CAGpCE,UAHoC;AAAA,MAIpCC,aAJoC,GAalCH,KAbkC,CAIpCG,aAJoC;AAAA,MAKpCC,cALoC,GAalCJ,KAbkC,CAKpCI,cALoC;AAAA,MAMpCC,aANoC,GAalCL,KAbkC,CAMpCK,aANoC;AAAA,MAOpCC,OAPoC,GAalCN,KAbkC,CAOpCM,OAPoC;AAAA,MAQpCC,OARoC,GAalCP,KAbkC,CAQpCO,OARoC;AAAA,MASpCC,WAToC,GAalCR,KAbkC,CASpCQ,WAToC;AAAA,MAUpCC,IAVoC,GAalCT,KAbkC,CAUpCS,IAVoC;AAAA,wBAalCT,KAbkC,CAWpCU,QAXoC;AAAA,MAWpCA,QAXoC,gCAWzB,EAXyB;AAAA,MAYjCC,IAZiC,kDAalCX,KAbkC;;AAetC,MAAMY,QAAQ,GAAG,mBAAO;AACtBC,IAAAA,GAAG,EAAE,aAACC,WAAD,EAAcC,QAAd;AAAA,aAA4B;AAC/BC,QAAAA,GAAG,oDAAkDF,WAAlD,SAAiEC;AADrC,OAA5B;AAAA,KADiB;AAItBE,IAAAA,IAAI,EAAE,cAACH,WAAD,EAAcC,QAAd;AAAA,aAA4B;AAChCC,QAAAA,GAAG,qCAAmCF,WAAnC,SAAkDC;AADrB,OAA5B;AAAA,KAJgB;AAOtBG,IAAAA,MAAM,EAAE,gBAACJ,WAAD,EAAcC,QAAd;AAAA,aAA4B;AAClCC,QAAAA,GAAG,0CAAwCF,WAAxC,SAAuDC;AADxB,OAA5B;AAAA,KAPc;AAUtBI,IAAAA,IAAI,EAAE,cAACL,WAAD,EAAcC,QAAd;AAAA,aAA4B;AAChCC,QAAAA,GAAG,oDAAkDF,WAAlD,SAAiEC,QADpC;AAEhCK,QAAAA,UAAU,EAAE;AAFoB,OAA5B;AAAA,KAVgB,CAalB;;AAbkB,GAAP,CAAjB;;AAgBA,MAAMC,IAAI,GAAG,mBAAO,CAClB;AACA;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,GAAG,EAAE,MAApB;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GAFkB,EAGlB;AAAEF,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,GAAG,EAAE,QAApB;AAA8BC,IAAAA,KAAK,EAAE;AAArC,GAHkB,CAIlB;AAJkB,GAAP,CAAb;AAOA,MAAMC,EAAE,GAAG,oBAAX;;AAtCsC,sBAuCvB,iBAAKC,OAAL,EAvCuB;AAAA,MAuC/BC,IAvC+B;;AAAA,kBAwCV,qBAASN,IAAT,aAASA,IAAT,yCAASA,IAAI,CAAEO,OAAN,CAAc,CAAd,CAAT,mDAAS,eAAkBL,GAA3B,CAxCU;AAAA,MAwC/BM,MAxC+B;AAAA,MAwCvBC,SAxCuB;;AAAA,mBAyCR,qBAAS,EAAT,CAzCQ;AAAA,MAyC/BC,OAzC+B;AAAA,MAyCtBC,UAzCsB,kBAyCM;;;AAzCN,mBA0CE,qBAAS,EAAT,CA1CF;AAAA,MA0C/BC,YA1C+B;AAAA,MA0CjBC,eA1CiB;;AAAA,mBA2CV,qBAAS,YAAT,CA3CU;AAAA,MA2C/BC,MA3C+B;AAAA,MA2CvBC,SA3CuB;;AAAA,mBA4ChB,qBAAS,EAAT,CA5CgB;AAAA,MA4C7BC,SA5C6B;;AA8CtC,wBAAU,YAAM;AACdC,IAAAA,aAAa;;AACb,WAAO,YAAM,CAAE,CAAf;AACD,GAHD,EAGG,EAHH;;AAKA,MAAMC,YAAY;AAAA,6FAAG,iBAAOhB,GAAP;AAAA;AAAA;AAAA;AAAA;AACnBO,cAAAA,SAAS,CAACP,GAAD,CAAT;AACAW,cAAAA,eAAe,mBAAMD,YAAN,EAAf;AACA,kBAAI,OAAOhC,WAAP,KAAuB,UAA3B,EAAuCA,WAAW,CAACsB,GAAD,CAAX;;AAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZgB,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAMA,MAAMD,aAAa;AAAA,8FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAChBhC,OADgB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAGAA,OAAO,CAAC;AAAEkC,gBAAAA,MAAM,EAAE,KAAV;AAAiBxB,gBAAAA,GAAG,EAAEyB,gBAAIC,eAAJ;AAAtB,eAAD,CAHP;;AAAA;AAGZC,cAAAA,GAHY;AAIhBX,cAAAA,UAAU,CAACW,GAAG,CAAClC,IAAJ,CAASA,IAAT,IAAiB,EAAlB,CAAV;AAJgB;AAAA;;AAAA;AAAA;AAAA;AAMhBmC,cAAAA,OAAO,CAACC,GAAR;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbP,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAWA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,QAA6B;AAAA,mCAAP,EAAO;AAAA,QAA1BtB,KAA0B,SAA1BA,KAA0B;AAAA,QAAnBuB,OAAmB,SAAnBA,OAAmB;;AACnD,QAAIC,GAAG,GAAG3B,IAAI,CAACO,OAAL,CAAaqB,IAAb,CAAkB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAAC3B,GAAF,KAAUM,MAAjB;AAAA,KAAlB,CAAV;;AAEA,QAAImB,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACxB,KAAJ,GAAYA,KAAZ;AACD,KALkD,CAOnD;AACA;AACA;AACA;;;AAEAY,IAAAA,SAAS,CAAC,mBAAmBe,IAAnB,CAAwBtB,MAAxB,IAAkC,QAAlC,GAA6C,YAA9C,CAAT;AACAQ,IAAAA,SAAS,CAAC,IAAIe,IAAJ,GAAWC,OAAX,EAAD,CAAT;AACD,GAdD;;AAgBA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AAC5BrB,IAAAA,eAAe,CAACqB,MAAD,CAAf;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACxB,QAAI,OAAOxD,KAAK,CAACE,UAAb,KAA4B,UAAhC,EAA4C,OAAOF,KAAK,CAACE,UAAN,CAAiBF,KAAjB,CAAP;AAC5C,QAAMyD,IAAI,GAAGpD,aAAa,IAAIqD,oBAA9B;AACA,wBACE,gCAAC,IAAD;AACE,MAAA,gBAAgB,EAAE7B,MADpB;AAEE,MAAA,QAAQ,EAAEU,YAFZ;AAGE,MAAA,kBAAkB,eAAE,gCAAC,qBAAD;AAAgB,QAAA,EAAE,EAAEd;AAApB;AAHtB,OAIMf,QAJN,oBAMGW,IAAI,CAACO,OANR,kDAMG,cAAc+B,GAAd,CAAkB,UAACT,CAAD;AAAA,0BACjB,gCAAC,iBAAD;AACE,QAAA,GAAG,EAAKA,CAAC,CAAC5B,IAAP,eAAe4B,CAAC,CAACU,KAAF,GAAUV,CAAC,CAACU,KAAF,GAAU,GAApB,GAA0B,EAAzC,IAA8CV,CAAC,CAAC1B,KAAhD,WADL;AAEE,QAAA,GAAG,EAAE0B,CAAC,CAAC3B;AAFT,QADiB;AAAA,KAAlB,CANH,CADF;AAeD,GAlBD;;AAoBA,MAAMsC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAI,OAAO7D,KAAK,CAAC8D,YAAb,KAA8B,UAAlC,EACE,OAAO9D,KAAK,CAAC8D,YAAN,CAAmB9D,KAAnB,CAAP;AACF,wBAAO,gCAAC,sBAAD;AAAY,MAAA,QAAQ,EAAEsD,SAAtB;AAAiC,MAAA,OAAO,EAAEvB;AAA1C,MAAP;AACD,GAJD;;AAMA,MAAMgC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAI,OAAO/D,KAAK,CAACG,aAAb,KAA+B,UAAnC,EACE,OAAOH,KAAK,CAACG,aAAN,CAAoBH,KAApB,CAAP,CAFyB,CAI3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMgE,OAAO,GAAG,CACd;AACEC,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,UAFb;AAGE3C,MAAAA,GAAG,EAAE,UAHP;AAIE4C,MAAAA,KAAK,EAAE;AAJT,KADc,GAOd;AACEF,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,SAAS,EAAE,kBAFb;AAGE3C,MAAAA,GAAG,EAAE,kBAHP;AAIE4C,MAAAA,KAAK,EAAE;AAJT,KAPc,EAad;AACEF,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,SAAS,EAAE,gBAFb;AAGE3C,MAAAA,GAAG,EAAE,gBAHP;AAIE4C,MAAAA,KAAK,EAAE;AAJT,KAbc,EAmBd;AACEF,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,SAAS,EAAE,gBAFb;AAGE3C,MAAAA,GAAG,EAAE,gBAHP;AAIE4C,MAAAA,KAAK,EAAE;AAJT,KAnBc,CAAhB;AA2BA,QAAMC,OAAO,GAAG,CACd;AACEH,MAAAA,KAAK,EAAE,IADT;AAEEC,MAAAA,SAAS,EAAE,WAFb;AAGE3C,MAAAA,GAAG,EAAE,WAHP;AAIE4C,MAAAA,KAAK,EAAE;AAJT,KADc,EAOd;AACEF,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,UAFb;AAGE3C,MAAAA,GAAG,EAAE,UAHP;AAIE4C,MAAAA,KAAK,EAAE;AAJT,KAPc,EAad;AACEF,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,SAAS,EAAE,cAFb;AAGE3C,MAAAA,GAAG,EAAE,cAHP;AAIE4C,MAAAA,KAAK,EAAE;AAJT,KAbc,EAmBd;AACEF,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,SAAS,EAAE,gBAFb;AAGE3C,MAAAA,GAAG,EAAE,gBAHP;AAIE4C,MAAAA,KAAK,EAAE;AAJT,KAnBc,EAyBd;AACEF,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,SAAS,EAAE,gBAFb;AAGE3C,MAAAA,GAAG,EAAE,gBAHP;AAIE4C,MAAAA,KAAK,EAAE;AAJT,KAzBc,EA+Bd;AACEF,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,SAAS,EAAE,aAFb;AAGE3C,MAAAA,GAAG,EAAE,aAHP;AAIE4C,MAAAA,KAAK,EAAE;AAJT,KA/Bc,CAAhB;;AAuCA,QAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,UAACA,GAAD;AAACA,QAAAA,GAAD,GAAO,EAAP;AAAA;;AAAA,cACd;AACEL,QAAAA,KAAK,EAAE,MADT;AAEEC,QAAAA,SAAS,EAAE,OAFb;AAGE3C,QAAAA,GAAG,EAAE,OAHP;AAIE4C,QAAAA,KAAK,EAAE;AAJT,OADc,EAOd;AACEF,QAAAA,KAAK,EAAE,KADT;AAEEC,QAAAA,SAAS,EAAE,eAFb;AAGE3C,QAAAA,GAAG,EAAE,eAHP;AAIE4C,QAAAA,KAAK,EAAE;AAJT,OAPc,SAcXG,GAdW,GAed;AACEL,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,SAAS,EAAE,EAFb;AAGE3C,QAAAA,GAAG,EAAE,YAHP;AAIEgD,QAAAA,KAAK,EAAE,OAJT;AAKEC,QAAAA,KAAK,EAAE,QALT;AAMEL,QAAAA,KAAK,EAAE,EANT;AAOE;AACAM,QAAAA,MAAM,EAAE;AAAA,4CAAIC,IAAJ;AAAIA,YAAAA,IAAJ;AAAA;;AAAA,8BACN;AAAG,YAAA,OAAO,EAAElE,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEmE,IAAb,OAAAnE,WAAW,GAAO,KAAP,SAAgBkE,IAAhB;AAAvB,4BADM;AAAA;AARV,OAfc;AAAA,KAAhB;;AA6BA,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf,OAYG7C,MAAM,KAAK,MAAX,gBACC,gCAAC,kBAAD;AACE,MAAA,MAAM,EAAC,QADT;AAEE,MAAA,OAAO,EAAEwC,OAAO,CAACL,OAAD,CAFlB;AAGE,MAAA,OAAO,EAAE1D,OAHX;AAIE,MAAA,WAAW,EAAE2B,YAJf;AAKE,MAAA,GAAG,EAAE;AAAA,wCAAkB,EAAlB;AAAA,YAAG2C,IAAH,SAAGA,IAAH;AAAA,YAASC,IAAT,SAASA,IAAT;;AAAA,eAAyBjE,QAAQ,CAACgB,OAAT,CAAiBC,MAAjB,EAAyB+C,IAAzB,EAA+BC,IAA/B,CAAzB;AAAA,OALP;AAME,MAAA,cAAc,EAAE/B;AANlB,MADD,GASG,IArBN,EAuBKjB,MAAM,KAAK,QAAX,gBACD,gCAAC,kBAAD;AACE,MAAA,MAAM,EAAC,QADT;AAEE,MAAA,OAAO,EAAEwC,OAAO,CAACD,OAAD,CAFlB;AAGE,MAAA,OAAO,EAAE9D,OAHX;AAIE,MAAA,WAAW,EAAE2B,YAJf;AAKE,MAAA,GAAG,EAAE;AAAA,wCAAkB,EAAlB;AAAA,YAAG2C,IAAH,SAAGA,IAAH;AAAA,YAASC,IAAT,SAASA,IAAT;;AAAA,eAAyBjE,QAAQ,CAACgB,OAAT,CAAiBC,MAAjB,EAAyB+C,IAAzB,EAA+BC,IAA/B,CAAzB;AAAA,OALP;AAME,MAAA,cAAc,EAAE/B;AANlB,MADC,GASC,IAhCN,CADF;AAoCD,GAtLD;;AAuLA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAErB;AAAhC,KACG+B,WAAW,EADd,EAEGK,aAAa,EAFhB,EAGGE,cAAc,EAHjB,CADF;AAOD","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport FlowTabs, { TabPane } from \"../flow-tabs\";\nimport FlowSearch from \"../flow-list-section/flow-search\";\nimport { FlowFullScreen } from \"../index\";\nimport { CommonTable } from \"../index\";\n\nimport \"./style/index\";\nimport \"../flow-list-section/style\";\n\nimport { Table, Row, Col, Form, Input, Select, Button } from \"antd\";\n\n\nimport api from \"../api\";\n\nexport default function FlowList(props) {\n  const {\n    onTabChange,\n    renderTabs,\n    renderContent,\n    TableComponent,\n    TabsComponent,\n    request,\n    listApi,\n    onLinkClick,\n    data,\n    tabProps = {},\n    ...rest\n  } = props;\n\n  const _listApi = useRef({\n    all: (currentPage, pageSize) => ({\n      url: `/caas/osoBpmProcInst/completedProcPersonPage/${currentPage}/${pageSize}`,\n    }),\n    wait: (currentPage, pageSize) => ({\n      url: `/caas/osoBpmTask/waitTaskPage/${currentPage}/${pageSize}`,\n    }),\n    accept: (currentPage, pageSize) => ({\n      url: `/caas/osoBpmTask/completedTaskPage/${currentPage}/${pageSize}`,\n    }),\n    done: (currentPage, pageSize) => ({\n      url: `/caas/osoBpmProcInst/completedProcPersonPage/${currentPage}/${pageSize}`,\n      finishFlag: true,\n    }), // finishFlag: true\n  });\n\n  const tabs = useRef([\n    // { name: \"全部\", key: \"all\", total: 0, value: 0 },\n    { name: \"待审批\", key: \"wait\", total: 0 },\n    { name: \"已审批\", key: \"accept\", total: 0 },\n    // { name: \"已完结\", key: \"done\", total: 0 },\n  ]);\n\n  const el = useRef();\n  const [form] = Form.useForm();\n  const [active, setAcitve] = useState(tabs?.current[0]?.key);\n  const [options, setOptions] = useState([]); // 流程分类选项\n  const [searchParams, setSearchParams] = useState({});\n  const [rowKey, setRowKey] = useState(\"procInstId\");\n  const [, setUpdate] = useState(\"\");\n\n  useEffect(() => {\n    _fetchOptions();\n    return () => {};\n  }, []);\n\n  const _onTabChange = async (key) => {\n    setAcitve(key);\n    setSearchParams({ ...searchParams });\n    if (typeof onTabChange === \"function\") onTabChange(key);\n  };\n\n  const _fetchOptions = async () => {\n    if (request) {\n      try {\n        let res = await request({ method: \"GET\", url: api.dictProcessList() });\n        setOptions(res.data.data || []);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const _afterFetchData = ({ total, records } = {}) => {\n    let tab = tabs.current.find((d) => d.key === active);\n\n    if (tab) {\n      tab.total = total;\n    }\n\n    // // 设置全部 未审批数量\n    // if (active === \"wait\") {\n    //   tabs.current[0].value = total;\n    // }\n\n    setRowKey(/^wait$|^accept$/g.test(active) ? \"taskId\" : \"procInstId\");\n    setUpdate(new Date().getTime());\n  };\n\n  const _onSearch = (values) => {\n    setSearchParams(values);\n  };\n\n  const _renderTabs = () => {\n    if (typeof props.renderTabs === \"function\") return props.renderTabs(props);\n    const Tabs = TabsComponent || FlowTabs;\n    return (\n      <Tabs\n        defaultActiveKey={active}\n        onChange={_onTabChange}\n        tabBarExtraContent={<FlowFullScreen el={el} />}\n        {...tabProps}\n      >\n        {tabs.current?.map((d) => (\n          <TabPane\n            tab={`${d.name}（${d.value ? d.value + \"/\" : \"\"}${d.total}）`}\n            key={d.key}\n          ></TabPane>\n        ))}\n      </Tabs>\n    );\n  };\n\n  const _renderSearch = () => {\n    if (typeof props.renderSearch === \"function\")\n      return props.renderSearch(props);\n    return <FlowSearch onSearch={_onSearch} options={options} />;\n  };\n\n  const _renderContent = () => {\n    if (typeof props.renderContent === \"function\")\n      return props.renderContent(props);\n\n    // const column1 = [\n    //   {\n    //     title: \"状态\",\n    //     dataIndex: \"stateDesc\",\n    //     key: \"stateDesc\",\n    //     width: 100,\n    //   },\n    //   {\n    //     title: \"发起人\",\n    //     dataIndex: \"createdBy\",\n    //     key: \"createdBy\",\n    //     width: 100,\n    //   },\n    //   {\n    //     title: \"审批节点\",\n    //     dataIndex: \"currentNodeNames\",\n    //     key: \"currentNodeNames\",\n    //     width: 200,\n    //   },\n    //   {\n    //     title: \"审批人\",\n    //     dataIndex: \"auditorNames\",\n    //     key: \"auditorNames\",\n    //     width: 200,\n    //   },\n    //   {\n    //     title: \"流程发起时间\",\n    //     dataIndex: \"procCreateTime\",\n    //     key: \"procCreateTime\",\n    //     width: 200,\n    //   },\n\n    //   {\n    //     title: \"任务创建时间\",\n    //     dataIndex: \"currentFirstTaskCreatedTime\",\n    //     key: \"currentFirstTaskCreatedTime\",\n    //     width: 200,\n    //   },\n\n    //   {\n    //     title: \"结束日期\",\n    //     dataIndex: \"procEndTime\",\n    //     key: \"procEndTime\",\n    //     width: 200,\n    //   },\n    // ];\n\n    const column2 = [\n      {\n        title: \"审批节点\",\n        dataIndex: \"taskName\",\n        key: \"taskName\",\n        width: 180,\n      },,\n      {\n        title: \"审批人\",\n        dataIndex: \"auditorUserNames\",\n        key: \"auditorUserNames\",\n        width: 110,\n      },\n      {\n        title: \"流程创建日期\",\n        dataIndex: \"procCreateTime\",\n        key: \"procCreateTime\",\n        width: 200,\n      },\n      {\n        title: \"任务创建日期\",\n        dataIndex: \"taskCreateTime\",\n        key: \"taskCreateTime\",\n        width: 200,\n      },\n    ];\n\n    const column3 = [\n      {\n        title: \"状态\",\n        dataIndex: \"stateDesc\",\n        key: \"stateDesc\",\n        width: 100,\n      },\n      {\n        title: \"审批节点\",\n        dataIndex: \"taskName\",\n        key: \"taskName\",\n        width: 180,\n      },\n      {\n        title: \"审批人\",\n        dataIndex: \"auditorNames\",\n        key: \"auditorNames\",\n        width: 110,\n      },\n      {\n        title: \"流程创建日期\",\n        dataIndex: \"procCreateTime\",\n        key: \"procCreateTime\",\n        width: 200,\n      },\n      {\n        title: \"任务创建日期\",\n        dataIndex: \"taskCreateTime\",\n        key: \"taskCreateTime\",\n        width: 200,\n      },\n      {\n        title: \"流程结束日期\",\n        dataIndex: \"procEndDate\",\n        key: \"procEndDate\",\n        width: 200,\n      },\n    ];\n\n    const columns = (col = []) => [\n      {\n        title: \"流程标题\",\n        dataIndex: \"title\",\n        key: \"title\",\n        width: 200,\n      },\n      {\n        title: \"创建人\",\n        dataIndex: \"createdByName\",\n        key: \"createdByName\",\n        width: 110,\n      },\n      \n      ...col,\n      {\n        title: \"操作\",\n        dataIndex: \"\",\n        key: \"operations\",\n        fixed: \"right\",\n        align: \"center\",\n        width: 80,\n        // align: 'right',\n        render: (...args) => (\n          <a onClick={onLinkClick?.bind(this, ...args)}>查看</a>\n        ),\n      },\n    ];\n\n    return (\n      <div className=\"flow-list-main\">\n        {/* {active === \"all\" || active === \"done\" ? (\n          <CommonTable\n            rowKey=\"procInstId\"\n            columns={columns(column1)}\n            request={request}\n            queryParams={searchParams}\n            api={({ page, size } = {}) => _listApi.current[active](page, size)}\n            afterFetchData={_afterFetchData}\n          />\n        ) : null} */}\n\n        {active === \"wait\" ? (\n          <CommonTable\n            rowKey=\"taskId\"\n            columns={columns(column2)}\n            request={request}\n            queryParams={searchParams}\n            api={({ page, size } = {}) => _listApi.current[active](page, size)}\n            afterFetchData={_afterFetchData}\n          />\n        ) : null}\n\n          {active === \"accept\" ? (\n          <CommonTable\n            rowKey=\"taskId\"\n            columns={columns(column3)}\n            request={request}\n            queryParams={searchParams}\n            api={({ page, size } = {}) => _listApi.current[active](page, size)}\n            afterFetchData={_afterFetchData}\n          />\n        ) : null}\n      </div>\n    );\n  };\n  return (\n    <div className=\"flow-list\" ref={el}>\n      {_renderTabs()}\n      {_renderSearch()}\n      {_renderContent()}\n    </div>\n  );\n}\n"],"file":"index.js"}