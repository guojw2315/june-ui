{"version":3,"sources":["../../src/components/flow-list/index.jsx"],"names":["FlowList","props","onTabChange","renderTabs","renderContent","TableComponent","TabsComponent","request","listApi","tabProps","rest","_listApi","all","currentPage","pageSize","url","wait","accept","done","finishFlag","tabs","name","key","total","value","tabTotal","el","useForm","form","current","active","setAcitve","setCurrentPage","setPageSize","setTotal","dataSource","setDataSource","options","setOptions","searchParams","setSearchParams","loading","setLoading","setUpdate","_fetchOptions","_fetchData","_onTabChange","get","api","dictProcessList","res","data","e","console","log","params","page","size","other","post","records","tab","find","d","_onPageChange","_onSearch","values","_renderTabs","Tabs","FlowTabs","map","_renderContent","columns","title","dataIndex","width","fixed","align","render","args","onClick","bind","_Table","minWidth","i","dataValue","onChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport FlowTabs, { TabPane } from \"../flow-tabs\";\r\nimport { FlowFullScreen } from \"../index\";\r\n\r\nimport \"./style/index\";\r\n\r\nimport { Table, Row, Col, Form, Input, Select, Button } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport api from \"../api\";\r\n\r\nexport default function FlowList(props) {\r\n  const {\r\n    onTabChange,\r\n    renderTabs,\r\n    renderContent,\r\n    TableComponent,\r\n    TabsComponent,\r\n    request,\r\n    listApi,\r\n    tabProps = {},\r\n    ...rest\r\n  } = props;\r\n\r\n  const _listApi = useRef({\r\n    all: (currentPage, pageSize) => ({\r\n      url: `/caas/osoBpmProcInst/completedProcPersonPage/${currentPage}/${pageSize}`,\r\n    }),\r\n    wait: (currentPage, pageSize) => ({\r\n      url: `/caas/osoBpmTask/waitTaskPage/${currentPage}/${pageSize}`,\r\n    }),\r\n    accept: (currentPage, pageSize) => ({\r\n      url: `/caas/osoBpmTask/completedTaskPage/${currentPage}/${pageSize}`,\r\n    }),\r\n    done: (currentPage, pageSize) => ({\r\n      url: `/caas/osoBpmProcInst/completedProcPersonPage/${currentPage}/${pageSize}`,\r\n      finishFlag: true,\r\n    }), // finishFlag: true\r\n  });\r\n\r\n  const tabs = useRef([\r\n    { name: \"全部\", key: \"all\", total: 0, value: 0},\r\n    { name: \"待审批\", key: \"wait\", total: 0 },\r\n    { name: \"已审批\", key: \"accept\", total: 0 },\r\n    { name: \"已完结\", key: \"done\", total: 0 },\r\n  ]);\r\n\r\n  const tabTotal = useRef({});\r\n\r\n  const el = useRef();\r\n  const [form] = Form.useForm();\r\n  const [active, setAcitve] = useState(tabs?.current[0]?.key);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [total, setTotal] = useState(0);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [options, setOptions] = useState([]); // 流程分类选项\r\n  const [searchParams, setSearchParams] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [, setUpdate] = useState('')\r\n\r\n  useEffect(() => {\r\n     _fetchOptions();\r\n    return () => {};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    _fetchData(active, searchParams, currentPage, pageSize);\r\n   \r\n  }, [active, searchParams, pageSize, currentPage]);\r\n\r\n  const _onTabChange = async (key) => {\r\n    // console.log(key)\r\n    setCurrentPage(1);\r\n    setAcitve(key)\r\n    if (typeof onTabChange === \"function\") onTabChange(key);\r\n  };\r\n\r\n  const _fetchOptions = async () => {\r\n    if (request) {\r\n      let res = await request.get(api.dictProcessList());\r\n      // console.log(res)\r\n      setOptions(res.data.data || [])\r\n      try {\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const _fetchData = async (\r\n    key,\r\n    params = searchParams,\r\n    page = currentPage,\r\n    size = pageSize\r\n  ) => {\r\n    if (request) {\r\n      try {\r\n        setLoading(true);\r\n        const { url, ...other } = _listApi.current[key](page, size);\r\n        // console.log(other)\r\n        let res = await request.post(url, {\r\n          data: {...params, ...other},\r\n        });\r\n        const { records = [], total = 0 } = res.data.data;\r\n\r\n        let tab = tabs.current.find(d => d.key === key)\r\n\r\n        if (tab) {\r\n          tab.total = total\r\n        }\r\n\r\n        // 设置全部 未审批数量\r\n        if (key === 'wait') {\r\n          tabs.current[0].value = total\r\n        }\r\n\r\n        setDataSource(records);\r\n        setTotal(total);\r\n        setLoading(false);\r\n        // console.log(\"flow-list: \", res);\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"flow-list fetch failed;\", e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const _onPageChange = (page, pageSize) => {\r\n    setCurrentPage(page);\r\n    setPageSize(pageSize);\r\n  };\r\n\r\n  const _onSearch = (values) => {\r\n    setSearchParams(values);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const _renderTabs = () => {\r\n    if (typeof props.renderTabs === \"function\") return props.renderTabs(props);\r\n    const Tabs = TabsComponent || FlowTabs;\r\n    return (\r\n      <Tabs\r\n        defaultActiveKey={active}\r\n        onChange={_onTabChange}\r\n        tabBarExtraContent={<FlowFullScreen el={el} />}\r\n        {...tabProps}\r\n      >\r\n        {tabs.current?.map((d) => (\r\n          <TabPane tab={`${d.name}（${d.value ? d.value + '/' : ''}${d.total}）`} key={d.key}></TabPane>\r\n        ))}\r\n      </Tabs>\r\n    );\r\n  };\r\n\r\n  const _renderContent = () => {\r\n    if (typeof props.renderContent === \"function\")\r\n      return props.renderContent(props);\r\n    const columns = [\r\n      {\r\n        title: \"流程标题\",\r\n        dataIndex: \"title\",\r\n        key: \"title\",\r\n        width: 200,\r\n      },\r\n      {\r\n        title: \"状态\",\r\n        dataIndex: \"stateDesc\",\r\n        key: \"stateDesc\",\r\n        width: 100,\r\n      },\r\n      {\r\n        title: \"发起人\",\r\n        dataIndex: \"createdBy\",\r\n        key: \"createdBy\",\r\n        width: 100,\r\n      },\r\n      {\r\n        title: \"审批节点\",\r\n        dataIndex: \"currentNodeNames\",\r\n        key: \"currentNodeNames\",\r\n        width: 200,\r\n      },\r\n      {\r\n        title: \"审批人\",\r\n        dataIndex: \"auditorNames\",\r\n        key: \"auditorNames\",\r\n        width: 200,\r\n      },\r\n      {\r\n        title: \"流程发起时间\",\r\n        dataIndex: \"procCreateTime\",\r\n        key: \"procCreateTime\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        title: \"任务创建时间\",\r\n        dataIndex: \"currentFirstTaskCreatedTime\",\r\n        key: \"currentFirstTaskCreatedTime\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        title: \"结束日期\",\r\n        dataIndex: \"procEndTime\",\r\n        key: \"procEndTime\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"\",\r\n        key: \"operations\",\r\n        fixed: \"right\",\r\n        align: \"center\",\r\n        width: 80,\r\n        // align: 'right',\r\n        render: (...args) => (\r\n          <a onClick={props?.onClick?.bind(this, ...args)}>查看</a>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const _Table = TableComponent || Table;\r\n\r\n    return (\r\n      <div className=\"flow-list-main\">\r\n        <div className=\"flow-search-bar\">\r\n          <Form\r\n            form={form}\r\n            name=\"horizontal_login\"\r\n            layout=\"inline\"\r\n            onFinish={_onSearch}\r\n          >\r\n            <Form.Item\r\n              label=\"流程分类\"\r\n              name=\"processDefKey\"\r\n              // rules={[{ required: true, message: \"Please input your username!\" }]}\r\n            >\r\n              <Select placeholder=\"请选择分类\" style={{ minWidth: 192 }}>\r\n                {options.map((d, i) => {\r\n                  return <Select.Option key={i} value={d.dataValue}>{d.name}</Select.Option>\r\n                })}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"标题\"\r\n              name=\"title\"\r\n              // rules={[{ required: true, message: \"Please input your password!\" }]}\r\n            >\r\n              <Input suffix={<SearchOutlined />} placeholder=\"关键字搜索\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item shouldUpdate={true} noStyle>\r\n              {() => (\r\n                <Button type=\"primary\" htmlType=\"submit\" ghost>\r\n                  搜索\r\n                </Button>\r\n              )}\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        <_Table\r\n          loading={loading}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          pagination={{\r\n            current: currentPage,\r\n            total,\r\n            pageSize,\r\n            onChange: _onPageChange,\r\n          }}\r\n          {...rest}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"flow-list\" ref={el}>\r\n      {_renderTabs()}\r\n      {_renderContent()}\r\n    </div>\r\n  );\r\n}\r\n"],"file":"index.js"}