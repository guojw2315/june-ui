{"version":3,"sources":["../../src/components/flow-list/index.jsx"],"names":["React","useEffect","useState","useRef","FlowTabs","TabPane","FlowSearch","FlowFullScreen","CommonTable","api","FlowList","props","onTabChange","renderTabs","renderContent","TableComponent","TabsComponent","request","listApi","onLinkClick","data","tabProps","rest","_listApi","all","currentPage","pageSize","url","wait","accept","done","finishFlag","tabs","name","key","total","value","el","useForm","form","current","active","setAcitve","options","setOptions","searchParams","setSearchParams","rowKey","setRowKey","setUpdate","_fetchOptions","_onTabChange","method","dictProcessList","res","console","log","_afterFetchData","records","tab","find","d","test","Date","getTime","_onSearch","values","_renderTabs","Tabs","map","_renderSearch","renderSearch","_renderContent","column1","title","dataIndex","width","column2","cell","text","record","auditorUserNames","assigneeUserName","columns","col","fixed","align","render","args","bind","page","size"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport FlowTabs, { TabPane } from \"../flow-tabs\";\r\nimport FlowSearch from \"../flow-list-section/flow-search\";\r\nimport { FlowFullScreen } from \"../index\";\r\nimport { CommonTable } from \"../index\";\r\n\r\nimport \"./style/index\";\r\nimport \"../flow-list-section/style\";\r\n\r\nimport { Table, Row, Col, Form, Input, Select, Button } from \"antd\";\r\n\r\n\r\nimport api from \"../api\";\r\n\r\nexport default function FlowList(props) {\r\n  const {\r\n    onTabChange,\r\n    renderTabs,\r\n    renderContent,\r\n    TableComponent,\r\n    TabsComponent,\r\n    request,\r\n    listApi,\r\n    onLinkClick,\r\n    data,\r\n    tabProps = {},\r\n    ...rest\r\n  } = props;\r\n\r\n  const _listApi = useRef({\r\n    all: (currentPage, pageSize) => ({\r\n      url: `/caas/osoBpmProcInst/completedProcPersonPage/${currentPage}/${pageSize}`,\r\n    }),\r\n    wait: (currentPage, pageSize) => ({\r\n      url: `/caas/osoBpmTask/waitTaskPage/${currentPage}/${pageSize}`,\r\n    }),\r\n    accept: (currentPage, pageSize) => ({\r\n      url: `/caas/osoBpmTask/completedTaskPage/${currentPage}/${pageSize}`,\r\n    }),\r\n    done: (currentPage, pageSize) => ({\r\n      url: `/caas/osoBpmProcInst/completedProcPersonPage/${currentPage}/${pageSize}`,\r\n      finishFlag: true,\r\n    }), // finishFlag: true\r\n  });\r\n\r\n  const tabs = useRef([\r\n    { name: \"全部\", key: \"all\", total: 0, value: 0 },\r\n    { name: \"待审批\", key: \"wait\", total: 0 },\r\n    { name: \"已审批\", key: \"accept\", total: 0 },\r\n    { name: \"已完结\", key: \"done\", total: 0 },\r\n  ]);\r\n\r\n  const el = useRef();\r\n  const [form] = Form.useForm();\r\n  const [active, setAcitve] = useState(tabs?.current[0]?.key);\r\n  const [options, setOptions] = useState([]); // 流程分类选项\r\n  const [searchParams, setSearchParams] = useState({});\r\n  const [rowKey, setRowKey] = useState(\"procInstId\");\r\n  const [, setUpdate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    _fetchOptions();\r\n    return () => {};\r\n  }, []);\r\n\r\n  const _onTabChange = async (key) => {\r\n    setAcitve(key);\r\n    setSearchParams({ ...searchParams });\r\n    if (typeof onTabChange === \"function\") onTabChange(key);\r\n  };\r\n\r\n  const _fetchOptions = async () => {\r\n    if (request) {\r\n      try {\r\n        let res = await request({ method: \"GET\", url: api.dictProcessList() });\r\n        setOptions(res.data.data || []);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const _afterFetchData = ({ total, records } = {}) => {\r\n    let tab = tabs.current.find((d) => d.key === active);\r\n\r\n    if (tab) {\r\n      tab.total = total;\r\n    }\r\n\r\n    // 设置全部 未审批数量\r\n    if (active === \"wait\") {\r\n      tabs.current[0].value = total;\r\n    }\r\n\r\n    setRowKey(/^wait$|^accept$/g.test(active) ? \"taskId\" : \"procInstId\");\r\n    setUpdate(new Date().getTime());\r\n  };\r\n\r\n  const _onSearch = (values) => {\r\n    setSearchParams(values);\r\n  };\r\n\r\n  const _renderTabs = () => {\r\n    if (typeof props.renderTabs === \"function\") return props.renderTabs(props);\r\n    const Tabs = TabsComponent || FlowTabs;\r\n    return (\r\n      <Tabs\r\n        defaultActiveKey={active}\r\n        onChange={_onTabChange}\r\n        tabBarExtraContent={<FlowFullScreen el={el} />}\r\n        {...tabProps}\r\n      >\r\n        {tabs.current?.map((d) => (\r\n          <TabPane\r\n            tab={`${d.name}（${d.value ? d.value + \"/\" : \"\"}${d.total}）`}\r\n            key={d.key}\r\n          ></TabPane>\r\n        ))}\r\n      </Tabs>\r\n    );\r\n  };\r\n\r\n  const _renderSearch = () => {\r\n    if (typeof props.renderSearch === \"function\")\r\n      return props.renderSearch(props);\r\n    return <FlowSearch onSearch={_onSearch} options={options} />;\r\n  };\r\n\r\n  const _renderContent = () => {\r\n    if (typeof props.renderContent === \"function\")\r\n      return props.renderContent(props);\r\n\r\n    const column1 = [\r\n      {\r\n        title: \"状态\",\r\n        dataIndex: \"stateDesc\",\r\n        key: \"stateDesc\",\r\n        width: 100,\r\n      },\r\n      {\r\n        title: \"发起人\",\r\n        dataIndex: \"createdBy\",\r\n        key: \"createdBy\",\r\n        width: 100,\r\n      },\r\n      {\r\n        title: \"审批节点\",\r\n        dataIndex: \"currentNodeNames\",\r\n        key: \"currentNodeNames\",\r\n        width: 200,\r\n      },\r\n      {\r\n        title: \"审批人\",\r\n        dataIndex: \"auditorNames\",\r\n        key: \"auditorNames\",\r\n        width: 200,\r\n      },\r\n      {\r\n        title: \"流程发起时间\",\r\n        dataIndex: \"procCreateTime\",\r\n        key: \"procCreateTime\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        title: \"任务创建时间\",\r\n        dataIndex: \"currentFirstTaskCreatedTime\",\r\n        key: \"currentFirstTaskCreatedTime\",\r\n        width: 200,\r\n      },\r\n\r\n      {\r\n        title: \"结束日期\",\r\n        dataIndex: \"procEndTime\",\r\n        key: \"procEndTime\",\r\n        width: 200,\r\n      },\r\n    ];\r\n\r\n    const column2 = [\r\n      {\r\n        title: \"处理人姓名\",\r\n        dataIndex: \"auditorUserNames\",\r\n        key: \"auditorUserNames\",\r\n        width: 100,\r\n        cell: (text, record) =>\r\n          record?.auditorUserNames || record?.assigneeUserName,\r\n      },\r\n      {\r\n        title: \"业务的key\",\r\n        dataIndex: \"businessKey\",\r\n        key: \"businessKey\",\r\n        width: 200,\r\n      },\r\n      {\r\n        title: \"创建日期\",\r\n        dataIndex: \"taskCreateTime\",\r\n        key: \"taskCreateTime\",\r\n        width: 200,\r\n      },\r\n      {\r\n        title: \"完成日期\",\r\n        dataIndex: \"taskEndDate\",\r\n        key: \"taskEndDate\",\r\n        width: 200,\r\n      },\r\n      {\r\n        title: \"流程Key\",\r\n        dataIndex: \"procDefKey\",\r\n        key: \"procDefKey\",\r\n        width: 200,\r\n      },\r\n    ];\r\n\r\n    const columns = (col = []) => [\r\n      {\r\n        title: \"流程标题\",\r\n        dataIndex: \"title\",\r\n        key: \"title\",\r\n        width: 200,\r\n      },\r\n      ...col,\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"\",\r\n        key: \"operations\",\r\n        fixed: \"right\",\r\n        align: \"center\",\r\n        width: 80,\r\n        // align: 'right',\r\n        render: (...args) => (\r\n          <a onClick={onLinkClick?.bind(this, ...args)}>查看</a>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"flow-list-main\">\r\n        {active === \"all\" || active === \"done\" ? (\r\n          <CommonTable\r\n            rowKey=\"procInstId\"\r\n            columns={columns(column1)}\r\n            request={request}\r\n            queryParams={searchParams}\r\n            api={({ page, size } = {}) => _listApi.current[active](page, size)}\r\n            afterFetchData={_afterFetchData}\r\n          />\r\n        ) : null}\r\n\r\n        {active === \"wait\" || active === \"accept\" ? (\r\n          <CommonTable\r\n            rowKey=\"taskId\"\r\n            columns={columns(column2)}\r\n            request={request}\r\n            queryParams={searchParams}\r\n            api={({ page, size } = {}) => _listApi.current[active](page, size)}\r\n            afterFetchData={_afterFetchData}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"flow-list\" ref={el}>\r\n      {_renderTabs()}\r\n      {_renderSearch()}\r\n      {_renderContent()}\r\n    </div>\r\n  );\r\n}\r\n"],"file":"index.js"}