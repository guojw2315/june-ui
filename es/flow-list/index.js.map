{"version":3,"sources":["../../src/components/flow-list/index.jsx"],"names":["React","useEffect","useState","useRef","FlowTabs","TabPane","FlowFullScreen","SearchOutlined","api","FlowList","props","onTabChange","renderTabs","renderContent","TableComponent","TabsComponent","request","listApi","tabProps","rest","_listApi","all","currentPage","pageSize","url","wait","accept","done","finishFlag","tabs","name","key","total","value","tabTotal","el","useForm","form","current","active","setAcitve","setCurrentPage","setPageSize","setTotal","dataSource","setDataSource","options","setOptions","searchParams","setSearchParams","loading","setLoading","setUpdate","_fetchOptions","_fetchData","_onTabChange","get","dictProcessList","res","data","e","console","log","params","page","size","other","post","records","tab","find","d","_onPageChange","_onSearch","values","_renderTabs","Tabs","map","_renderContent","columns","title","dataIndex","width","fixed","align","render","args","onClick","bind","_Table","minWidth","i","dataValue","onChange"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport FlowTabs, { TabPane } from \"../flow-tabs\";\nimport { FlowFullScreen } from \"../index\";\n\nimport \"./style/index\";\n\nimport { Table, Row, Col, Form, Input, Select, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nimport api from \"../api\";\n\nexport default function FlowList(props) {\n  const {\n    onTabChange,\n    renderTabs,\n    renderContent,\n    TableComponent,\n    TabsComponent,\n    request,\n    listApi,\n    tabProps = {},\n    ...rest\n  } = props;\n\n  const _listApi = useRef({\n    all: (currentPage, pageSize) => ({\n      url: `/caas/osoBpmProcInst/completedProcPersonPage/${currentPage}/${pageSize}`,\n    }),\n    wait: (currentPage, pageSize) => ({\n      url: `/caas/osoBpmTask/waitTaskPage/${currentPage}/${pageSize}`,\n    }),\n    accept: (currentPage, pageSize) => ({\n      url: `/caas/osoBpmTask/completedTaskPage/${currentPage}/${pageSize}`,\n    }),\n    done: (currentPage, pageSize) => ({\n      url: `/caas/osoBpmProcInst/completedProcPersonPage/${currentPage}/${pageSize}`,\n      finishFlag: true,\n    }), // finishFlag: true\n  });\n\n  const tabs = useRef([\n    { name: \"全部\", key: \"all\", total: 0, value: 0},\n    { name: \"待审批\", key: \"wait\", total: 0 },\n    { name: \"已审批\", key: \"accept\", total: 0 },\n    { name: \"已完结\", key: \"done\", total: 0 },\n  ]);\n\n  const tabTotal = useRef({});\n\n  const el = useRef();\n  const [form] = Form.useForm();\n  const [active, setAcitve] = useState(tabs?.current[0]?.key);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [total, setTotal] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const [options, setOptions] = useState([]); // 流程分类选项\n  const [searchParams, setSearchParams] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [, setUpdate] = useState('')\n\n  useEffect(() => {\n     _fetchOptions();\n    return () => {};\n  }, []);\n\n  useEffect(() => {\n    _fetchData(active, searchParams, currentPage, pageSize);\n   \n  }, [active, searchParams, pageSize, currentPage]);\n\n  const _onTabChange = async (key) => {\n    setCurrentPage(1);\n    setAcitve(key)\n    if (typeof onTabChange === \"function\") onTabChange(key);\n  };\n\n  const _fetchOptions = async () => {\n    if (request) {\n      let res = await request.get(api.dictProcessList());\n      setOptions(res.data.data || [])\n      try {\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const _fetchData = async (\n    key,\n    params = searchParams,\n    page = currentPage,\n    size = pageSize\n  ) => {\n    if (request) {\n      try {\n        setLoading(true);\n        const { url, ...other } = _listApi.current[key](page, size);\n        // console.log(other)\n        let res = await request.post(url, {\n          data: {...params, ...other},\n        });\n        const { records = [], total = 0 } = res.data.data;\n\n        let tab = tabs.current.find(d => d.key === key)\n\n        if (tab) {\n          tab.total = total\n        }\n\n        // 设置全部 未审批数量\n        if (key === 'wait') {\n          tabs.current[0].value = total\n        }\n\n        setDataSource(records);\n        setTotal(total);\n        setLoading(false);\n        // console.log(\"flow-list: \", res);\n      } catch (e) {\n        setLoading(false);\n        console.log(\"flow-list fetch failed;\", e);\n      }\n    }\n  };\n\n  const _onPageChange = (page, pageSize) => {\n    setCurrentPage(page);\n    setPageSize(pageSize);\n  };\n\n  const _onSearch = (values) => {\n    setSearchParams(values);\n    setCurrentPage(1);\n  };\n\n  const _renderTabs = () => {\n    if (typeof props.renderTabs === \"function\") return props.renderTabs(props);\n    const Tabs = TabsComponent || FlowTabs;\n    return (\n      <Tabs\n        defaultActiveKey={active}\n        onChange={_onTabChange}\n        tabBarExtraContent={<FlowFullScreen el={el} />}\n        {...tabProps}\n      >\n        {tabs.current?.map((d) => (\n          <TabPane tab={`${d.name}（${d.value ? d.value + '/' : ''}${d.total}）`} key={d.key}></TabPane>\n        ))}\n      </Tabs>\n    );\n  };\n\n  const _renderContent = () => {\n    if (typeof props.renderContent === \"function\")\n      return props.renderContent(props);\n    const columns = [\n      {\n        title: \"流程标题\",\n        dataIndex: \"title\",\n        key: \"title\",\n        width: 200,\n      },\n      {\n        title: \"状态\",\n        dataIndex: \"stateDesc\",\n        key: \"stateDesc\",\n        width: 100,\n      },\n      {\n        title: \"发起人\",\n        dataIndex: \"createdBy\",\n        key: \"createdBy\",\n        width: 100,\n      },\n      {\n        title: \"审批节点\",\n        dataIndex: \"currentNodeNames\",\n        key: \"currentNodeNames\",\n        width: 200,\n      },\n      {\n        title: \"审批人\",\n        dataIndex: \"auditorNames\",\n        key: \"auditorNames\",\n        width: 200,\n      },\n      {\n        title: \"流程发起时间\",\n        dataIndex: \"procCreateTime\",\n        key: \"procCreateTime\",\n        width: 200,\n      },\n\n      {\n        title: \"任务创建时间\",\n        dataIndex: \"currentFirstTaskCreatedTime\",\n        key: \"currentFirstTaskCreatedTime\",\n        width: 200,\n      },\n\n      {\n        title: \"结束日期\",\n        dataIndex: \"procEndTime\",\n        key: \"procEndTime\",\n        width: 200,\n      },\n\n      {\n        title: \"操作\",\n        dataIndex: \"\",\n        key: \"operations\",\n        fixed: \"right\",\n        align: \"center\",\n        width: 80,\n        // align: 'right',\n        render: (...args) => (\n          <a onClick={props?.onClick?.bind(this, ...args)}>查看</a>\n        ),\n      },\n    ];\n\n    const _Table = TableComponent || Table;\n\n    return (\n      <div className=\"flow-list-main\">\n        <div className=\"flow-search-bar\">\n          <Form\n            form={form}\n            name=\"horizontal_login\"\n            layout=\"inline\"\n            onFinish={_onSearch}\n          >\n            <Form.Item\n              label=\"流程分类\"\n              name=\"processDefKey\"\n              // rules={[{ required: true, message: \"Please input your username!\" }]}\n            >\n              <Select placeholder=\"请选择分类\" style={{ minWidth: 192 }}>\n                {options.map((d, i) => {\n                  return <Select.Option key={i} value={d.dataValue}>{d.name}</Select.Option>\n                })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              label=\"标题\"\n              name=\"title\"\n              // rules={[{ required: true, message: \"Please input your password!\" }]}\n            >\n              <Input suffix={<SearchOutlined />} placeholder=\"关键字搜索\" />\n            </Form.Item>\n\n            <Form.Item shouldUpdate={true} noStyle>\n              {() => (\n                <Button type=\"primary\" htmlType=\"submit\" ghost>\n                  搜索\n                </Button>\n              )}\n            </Form.Item>\n          </Form>\n        </div>\n        <_Table\n          rowKey=\"procInstId\"\n          loading={loading}\n          columns={columns}\n          dataSource={dataSource}\n          pagination={{\n            current: currentPage,\n            total,\n            pageSize,\n            onChange: _onPageChange,\n          }}\n          {...rest}\n        />\n      </div>\n    );\n  };\n  return (\n    <div className=\"flow-list\" ref={el}>\n      {_renderTabs()}\n      {_renderContent()}\n    </div>\n  );\n}\n"],"file":"index.js"}